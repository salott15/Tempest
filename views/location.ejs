<!DOCTYPE html>
<html>
  <head>
    <title>Geolocation</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

    <link rel="stylesheet" type="text/css" href="/main.css">

  <link href="https://fonts.googleapis.com/css?family=Abril+Fatface|Open+Sans+Condensed:300" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Sanchez" rel="stylesheet">

  <script
    src="https://code.jquery.com/jquery-3.2.1.min.js"
    integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4"
    crossorigin="anonymous"></script>

    <script src="app.js"></script>

  <script type="text/javascript">
  let creds = window.location.pathname.split('/');
  console.info(creds, "todo: Make this work");
  if(creds[3]){
    localStorage.setItem('hash',creds[2])
    localStorage.setItem('uid',creds[3])
    localStorage.setItem('userName',creds[4])
    window.location.pathname = '';
  }
</script>

    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 80%;
        width:80%;
        margin:auto;
        border: 5px black solid ;
      }
      /* Option0al: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>

<% include nav.ejs %>

<div id = "description">
<p>Choose your next bar based on how busy it is, as rated by the people who are there.</p>
</div>
<br>
<br>
    <div id="map"></div>

<div class = "row">
  <a href="/location"><div class= "col-6" id = "full">
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
    <h2><span></span></h2>
  </div>
  </a>

  <a href="">
  <div class= "col-6" id="empty">
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
     <h2><span></span></h2>
  </div>
  </a>
</div>
<div id="instructions">
  <div class="close">X</div>
  <div class="content">
    <h3>To use this site:</h3>
    <ul>
      <li>Allow the site to use your location.</li>
      <li>Click on a bar to see its current status of full or empty, or add your own status.</li>
      <li>Click on the full or empty images to see bars in your area that have been rated full or empty.</li>
      <li>Log in to save or delete a bar from your bars.</li>
    </ul>
  </div>
</div>
    <script>
      // Note: This example requires that you consent to location sharing when
      // prompted by your browser. If you see the error "The Geolocation service
      // failed.", it means you probably did not give permission for the browser to
      // locate you.
      var map, infoWindow, currentBar;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'),{
          center: {lat: -34.397, lng: 150.644},
          zoom: 15
        }); }
        infoWindow = new google.maps.InfoWindow;
        currentBar = {}
        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            infoWindow.setPosition(pos);
            infoWindow.setContent('Location found.');
            infoWindow.open(map);
  var googlePos = new google.maps.LatLng(pos.lat,pos.lng);
console.log(pos, googlePos)
  var request = {
    location: pos,
    radius: '5000',//TODO: Set radius to zoom level
    types: ['bar']
  };

  service = new google.maps.places.PlacesService(map);
  service.nearbySearch(request, callback);

  function callback(results, status) {
    console.log('google.maps.places:',google.maps.places);
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker(results[i]);
    }
  }
  else{
    console.log("Error", results, status);
  }
}
function createMarker(place) {
  var placeLoc = place.geometry.location;
  var marker = new google.maps.Marker({
    map: map,
    position: place.geometry.location
  });
  console.log(currentBar)
  google.maps.event.addListener(marker, 'click', function() {
    console.log(currentBar, this.position)
    currentBar.lat = this.position.lat();
    currentBar.lng = this.position.lng();
    infoWindow.setContent(place.name);
    infoWindow.open(map, this);
  });
}

            map.setCenter(pos);
            let bounds = map.getBounds()
             localStorage.setItem("boundsLatOne", bounds.f.b)
             localStorage.setItem("boundsLat2", bounds.f.f)
             localStorage.setItem("boundsLngOne", bounds.b.b)
             localStorage.setItem("boundsLng2", bounds.b.f)
             console.log("bounds", map.getBounds(), localStorage)
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }
      $("body").on("click", ".gm-style-iw", function(e){
        console.log(currentBar);
       currentBar.barname =  $(this).find("div:first-child div").text()
      /* $.ajax({method: "post", url: "/bar/current", data: {barname: currentBar.barname}}).done(function(){
        alert("Bar saved.")
       });*/
       window.location.href="/bar/find/"+ currentBar.barname + "/" + currentBar.lat + "/" +currentBar.lng
      });
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD20L_evAuqJolowLDq9G6WGtOX6noeLX4&libraries=places&callback=initMap">
    </script>
  </body>
</html>
